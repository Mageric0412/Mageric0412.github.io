---
author: mageric
comments: true
date: 2015-04-10 08:17:29+00:00
layout: post
title: 剑指offer面试题43：n个筛子的点数
categories:
- 算法
tags:
- 算法
---
考虑两个数组来存储**骰子点数的每一个总数出现的次数**。   
在一次循环中，第一个数组中的**第n个数字表示骰子和为n的出现的次数**，在下次循环中，我们加上一个新的骰子，此时**和为n**的骰子出现的次数应该**等于**上次循环中骰子点数为**n-1，n-2，n-3,n-4,n-5,n-6次数的总和**（比如2个筛子，当出现总数3的时候是可能筛子1出现1，筛子2出现2，或者筛子1出现2，筛子2出现1，筛子前后出现的组合影响着出现的总数）。    
所以我们把另一个数组的**第n个数字设为前一个数对应的第n-1,n-2,n-3,n-4,n-5,n-6之和**，以此可以写出如下的代码，思路很清晰。
{% highlight c %}
#include<iostream>
#include<math.h>
using namespace std;
void probability(int n)
{
  int i,j,k,temp,max = 6*n,temp1[6*n+1],temp2[6*n+1];
  for(j=0;j<6*n+1;j++)
  {
   temp1[j] = 0;
   temp2[j] = 0;
  }
  for(j=1;j<7;j++)
  {
   temp1[j] = 1;
  }
  int flag = 0;
  for(j = 2;j <= n;j++)//n dices to go
 {
   if(flag == 0)//对temp2进行操作
   {
    for(k = j;k < j * 6 + 1;k++)
    {
      temp = 1;
      while((temp <= 6) && (k > temp))
      {
       //cout <<k <<" " << k-temp <<" " <<temp1[k-temp] << endl;
        temp2[k] += temp1[k-temp];
        temp++;
       //cout << k <<endl;
      }
    }
    flag = 1;
    continue;//跳过剩下的循环
   }
   else if(flag == 1)//对temp1进行操作
   {
    for(k = j ;k < j * 6 + 1;k++)
    {
     temp = 1;
     while((temp <= 6) && (k >temp) )
     {
      temp1[k] += temp2[k-temp];
      temp++;
     }
     cout << "temp1[" << k <<"] " <<temp1[k] << endl;
    }
    flag = 0;
   }
 }
 double total = pow((double)6,n);
 if(flag == 0)
 {
  for(i = n;i< 6*n + 1 ;i++)
  {
   cout <<i<<"'s\t probability is:\t" <<((double)temp1[i])/total <<endl;
  }
 }
 else
 {
  for(i = n;i< 6*n + 1 ;i++)
   {
     cout <<i<<"'s\t probability is:\t" <<((double)temp2[i])/total<<endl;
   }
 }
}
int main()
{
  int n;
  cin >> n;
  int i;
  probability(n);
  system("pause");
  return 0;
}
{% endhighlight %}
